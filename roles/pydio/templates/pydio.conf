server {
  listen 80;
  listen [::]:80;

  server_name {{ pydio_domain }};
{% if pydio_use_acmetool %}
  location /.well-known/acme-challenge/ {
    alias /var/run/acme/acme-challenge/;
  }

{% endif %}
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;

  # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
  ssl_certificate {{ pydio_certificate_path }};
  ssl_certificate_key {{ pydio_key_path }};
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  ssl_session_tickets off;

  # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
  ssl_dhparam /etc/nginx/dhparam.pem;

  # modern configuration. tweak to your needs.
  ssl_protocols TLSv1.2;
  ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
  ssl_prefer_server_ciphers on;

  # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
  add_header Strict-Transport-Security max-age=15768000;

  # OCSP Stapling ---
  # fetch OCSP records from URL in ssl_certificate and cache them
  ssl_stapling on;
  ssl_stapling_verify on;

  ## verify chain of trust of OCSP response using Root CA and Intermediate certs
  ssl_trusted_certificate /etc/ssl/certs.pem;

  resolver {{ ansible_dns.nameservers[0] }};
    

  root {{ pydio_webroot }};

  # Add index.php to the list if you are using PHP
  index index.php;

  server_name {{ pydio_domain }};
  client_max_body_size 250m;

{% if pydio_use_acmetool %}
  location /.well-known/acme-challenge/ {
    alias /var/run/acme/acme-challenge/;
  }

{% endif %}
  location / {
  # First attempt to serve request as file, then
  # as directory, then fall back to displaying a 404.
    try_files $uri $uri/ =404;
  }

  location /data {
    deny all;
    return 403;
  }

  location /storage {
    deny all;
    return 403;
  }

  location ~ \.php$ {
    include /etc/nginx/fastcgi.conf;
    try_files  $uri =404;
    fastcgi_pass unix:/var/run/pydio.sock;
    fastcgi_index index.php;
  }
}
